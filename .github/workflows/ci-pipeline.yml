# ===========================================================
# CI Futurisys Churn API
# - Vérifie PR et branches (lint + tests)
# - Déploie sur Hugging Face uniquement quand on pousse sur main
# ===========================================================

name: Pipeline CI pour l'API Futurisys

on:
  push:
    branches:
      - develop           # CI sur la branche d'intégration
      - main              # CI + (potentiellement) déploiement
  pull_request:
    branches:
      - develop           # CI sur les PR vers develop (pas de déploiement)

jobs:
  build_and_test:         # 1er job : qualité + tests
    runs-on: ubuntu-latest

    steps:
      # Récupère le code du repo (et les fichiers LFS — ex: modèle .joblib)
      - name: Checkout du code
        uses: actions/checkout@v4
        with:
          lfs: true

      # Installe Python (ici 3.12)
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Installe l'outil "uv" (gestion d'env + pip ultra-rapide)
      - name: Installer uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          # Ajoute uv au PATH pour cette session (le script l'installe via Cargo)
          source $HOME/.cargo/env

      # Crée un environnement virtuel local (.venv)
      - name: Créer l'environnement virtuel
        run: uv venv

      # Installe les dépendances dans .venv depuis requirements.txt
      - name: Installer les dépendances
        run: uv pip install -r requirements.txt

      # Lint : style & erreurs courantes (Ruff)
      - name: Linter avec Ruff
        run: uv run ruff check src/ tests/

      # Tests unitaires / d’intégration (Pytest)
      - name: Lancer les tests avec Pytest
        run: uv run pytest
      
      # Tests avec rapport de couverture (coverage.py)
      - name: Tests (avec couverture)
        run: uv run pytest --cov=futurisys_churn_api --cov-report=term-missing

  deploy:                 # 2e job : déploiement (si le 1er a réussi)
    needs: build_and_test
    # Ne se lance que pour un push vers main (pas pour les PR)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest

    steps:
      # Nouveau checkout pour avoir un repo propre à pousser
      - name: Checkout du code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # historique complet (sinon push peut échouer)
          lfs: true        # on a besoin des fichiers LFS (modèle)

      # Push vers Hugging Face Spaces en utilisant le jeton secret
      - name: Push vers Hugging Face Spaces
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}  # secret à créer dans GitHub
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          # Force-push sur le Space cible (branche main)
          git push --force https://AI-Christopher:$HF_TOKEN@huggingface.co/spaces/AI-Christopher/futurisys_churn_api main
