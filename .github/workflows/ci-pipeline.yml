name: Pipeline CI pour l'API Futurisys

on:
  push:
    branches:
      - develop
      - main  # <-- Déclencheur ajouté pour la production
  pull_request:
    branches:
      - develop

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Installer uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          source $HOME/.cargo/env

      # --- ÉTAPE AJOUTÉE ---
      # On crée un environnement virtuel nommé .venv
      # C'est l'équivalent de "uv init" mais en mode non-interactif
      - name: Créer l'environnement virtuel
        run: uv venv

      # On installe les dépendances DANS cet environnement virtuel
      - name: Installer les dépendances
        run: uv pip install -r requirements.txt

      - name: Linter avec Ruff
        run: uv run ruff check src/ tests/

      - name: Lancer les tests avec Pytest
        run: uv run pytest

  deploy:
    # Ce job dépend du succès du précédent
    needs: build_and_test
    # Condition : Ne s'exécute QUE sur un push vers la branche 'main'
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true # Important pour récupérer les fichiers du modèle plus tard

      - name: Push vers Hugging Face Spaces
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }} # Utilise le secret GitHub
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git push --force https://AI-Christopher:$HF_TOKEN@huggingface.co/spaces/AI-Christopher/futurisys_churn_api main